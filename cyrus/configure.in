dnl Process this file with autoconf to produce a configure script.
AC_INIT(imap/imapd.c)
AC_PROG_CC
AC_PROG_INSTALL
AC_PROG_RANLIB
AC_PROG_MAKE_SET
AC_AIX
AC_ISC_POSIX
AC_PROG_LEX
case "$LEX" in
	flex*) LEXFLAGS="-l";;
	*) LEXFLAGS="";;
esac
AC_SUBST(LEXFLAGS)
AC_PROG_YACC
AC_C_CONST
AC_SYS_LONG_FILE_NAMES
if test $ac_cv_sys_long_file_names = no; then
	AC_MSG_ERROR(The Cyrus IMAPD requires support for long file names)
fi
AC_CHECK_HEADERS(unistd.h)
AC_REPLACE_FUNCS(bcopy strcasecmp ftruncate getdtablesize)
AC_HEADER_DIRENT
AC_SUBST(CPPFLAGS)
AC_SUBST(EXTRA_SUBDIRS)
AC_SUBST(DEPLIBS)
AC_FUNC_VPRINTF

AC_MSG_CHECKING(for setproctitle)
AC_CACHE_VAL(cyrus_cv_sys_setproctitle, AC_TRY_CPP([
#if defined(_AIX3) || defined(DGUX) || defined(_SEQUENT_) || defined(apollo)
#include </nonexistent>
#endif],cyrus_cv_sys_setproctitle=yes,cyrus_cv_sys_setproctitle=no))
if test $cyrus_cv_sys_setproctitle = yes; then
	AC_DEFINE(SETPROCTITLE)
fi
AC_MSG_RESULT($cyrus_cv_sys_setproctitle)

AC_MSG_CHECKING(nonblocking method)
AC_CACHE_VAL(cyrus_cv_sys_nonblock,AC_TRY_LINK([#include <sys/types.h>
#include <sys/file.h>
#include <fcntl.h>
#ifndef	FNDELAY
#define FNDELAY		O_NDELAY
#endif],[fcntl(0, F_GETFL, 0)&FNDELAY],
cyrus_cv_sys_nonblock=fcntl,cyrus_cv_sys_nonblock=ioctl))
WITH_NONBLOCK=$cyrus_cv_sys_nonblock
AC_SUBST(WITH_NONBLOCK)
AC_MSG_RESULT($WITH_NONBLOCK)

AC_MSG_CHECKING(timezone GMT offset method)
AC_CACHE_VAL(cyrus_cv_struct_sys_gmtoff,AC_TRY_COMPILE([
#include <time.h>],[struct tm tm;
tm.tm_gmtoff = 0;
],cyrus_cv_struct_sys_gmtoff=tm,cyrus_cv_struct_sys_gmtoff=gmtime))
WITH_GMTOFF=$cyrus_cv_struct_sys_gmtoff
AC_SUBST(WITH_GMTOFF)
AC_MSG_RESULT($WITH_GMTOFF)

AC_FUNC_MMAP
if test $ac_cv_func_mmap = yes; then
	WITH_MAP="mmap"
else
	AC_MSG_CHECKING(for non-shared mmap)
	AC_CACHE_VAL(cyrus_cv_func_mmap_private,AC_TRY_RUN([
#include <sys/types.h>
#include <sys/types.h>
#include <sys/mman.h>
#include <fcntl.h>
main() {int fd = open("conftestmmap", O_RDWR|O_CREAT, 666);
if (fd == -1) exit(1);
if (mmap((caddr_t)0, 100, PROT_READ, MAP_PRIVATE
#ifdef MAP_FILE
| MAP_FILE
#endif
#ifdef MAP_VARIABLE
| MAP_VARIABLE
#endif
, fd, 0L) == (caddr_t)-1)
 exit(1);exit(0);}
],cyrus_cv_func_mmap_private=yes,cyrus_cv_func_mmap_private=no,
cyrus_cv_func_mmap_private=no))
	AC_MSG_RESULT($cyrus_cv_func_mmap_private)

	if test $cyrus_cv_func_mmap_private = yes; then
		AC_MSG_WARN(*** mmap() does not adequately support shared memory)
		AC_MSG_WARN(*** Expect a performance penalty)
		WITH_MAP=private
	else
		AC_MSG_WARN(*** This system does not have a working mmap())
		AC_MSG_WARN(*** Expect a considerable performance penalty)
		WITH_MAP=nommap
	fi
fi

AC_SUBST(WITH_MAP)
AC_ARG_WITH(lock,[  --with-lock=METHOD      force use of METHOD for locking
                          METHOD is flock or fcntl],WITH_LOCK="$withval",
	AC_CHECK_FUNC(flock,WITH_LOCK="flock",WITH_LOCK="fcntl"))
AC_SUBST(WITH_LOCK)

AC_MSG_CHECKING(for Kerberos)
AC_CACHE_VAL(cyrus_cv_lib_kerberos, if test -f /etc/krb.conf; then
	cyrus_cv_lib_kerberos=yes
else
	cyrus_cv_lib_kerberos=no
fi)
AC_MSG_RESULT($cyrus_cv_lib_kerberos)

AC_ARG_WITH(login,[  --with-login=METHOD     use login module METHOD
                          METHOD is unix, unix_shadow, or krb],
	    WITH_LOGIN="$withval",
	if test $cyrus_cv_lib_kerberos = yes; then
		echo using Kerberos authentication
		WITH_LOGIN=krb
	else
		echo using unix /etc/passwd authentication
		WITH_LOGIN=unix
	fi)
AC_SUBST(WITH_LOGIN)
AC_ARG_WITH(auth,[  --with-auth=METHOD      use authorization module METHOD
                          METHOD is unix or krb],[WITH_AUTH="$withval"
	with_login_base=`echo ${WITH_LOGIN}|sed 's/_.*//'`
	case "$withval" in
	${with_login_base}) true;;
	${with_login_base}_*) true;;
	*) AC_MSG_ERROR(Authorization module incompatibile with login module);;
	esac],WITH_AUTH="$WITH_LOGIN")
AC_SUBST(WITH_AUTH)
dnl
dnl XXX MUST CHECK FOR TCL BEFORE KERBEROS V4 XXX
dnl This is because some genius at MIT named one of the Kerberos v4
dnl library functions log().  This of course conflicts with the
dnl logarithm function in the standard math library, used by Tcl.
dnl
dnl Checking for Tcl first puts -lm before -lkrb on the library list.
dnl
TCL_SUBDIRS="cyradm"
AC_ARG_WITH(tcl,[  --with-tcl=PATH         use tcl from PATH],
	with_tcl="${withval}")
if test -z "$with_tcl"; then
     if test -f /usr/local/lib/libtcl.a; then
	with_tcl="/usr/local"
     fi
fi
case "$with_tcl" in
	no) TCL_SUBDIRS="" ;;
	"") AC_CHECK_LIB(tcl,main,LIBS="${LIBS} -ltcl -lm",
	    [AC_MSG_WARN([Unable to find Tcl, will not compile cyradm])
	     TCL_SUBDIRS=""],-lm) ;;
	*)  CPPFLAGS="${CPPFLAGS} -I${with_tcl}/include"
	    LIBS="${LIBS} ${with_tcl}/lib/libtcl.a -lm" ;;
esac
AC_SUBST(TCL_SUBDIRS)
dnl
dnl Test for Kerberos
dnl
AC_ARG_WITH(krb,[  --with-krb=PATH         use Kerberos from PATH],
	with_krb="${withval}")
if test -z "$with_krb"; then
     if test -f /usr/local/lib/libkrb.a; then
	with_krb="/usr/local"
     fi
fi
case "$with_krb" in
	no) true;;
	"") AC_CHECK_LIB(krb,main,LIBS="${LIBS} -lkrb -ldes",
		with_krb="no",-ldes);;
	*)  CPPFLAGS="${CPPFLAGS} -I${with_krb}/include"
	    LIBS="${LIBS} ${with_krb}/lib/libkrb.a ${with_krb}/lib/libdes.a";;
esac
if test "$with_krb" = "no"; then
     if test "$WITH_LOGIN" = "krb"; then
	AC_MSG_ERROR(Unable to find Kerberos libraries)
     fi
else
     AC_DEFINE(HAVE_ACTE_KRB)
     LIBOBJS="${LIBOBJS} acte_krb.o";
fi     
dnl
dnl Look for inn
dnl
AC_ARG_WITH(inn,[  --with-inn=PATH         use INN from PATH],
	INNSHELLVARS="$withval/innshellvars",[
echo checking for inn
if test -f /usr/local/news/innshellvars; then
	INNSHELLVARS=/usr/local/news/innshellvars
elif test -f /usr/lib/news/innshellvars; then
	INNSHELLVARS=/usr/lib/news/innshellvars
elif test -f /usr/news/innshellvars; then
	INNSHELLVARS=/usr/news/innshellvars
else
	echo "did not find inn, don't worry"
	INNSHELLVARS=/did/not/find/innshellvars
fi])
AC_SUBST(INNSHELLVARS)

AC_ARG_ENABLE(privacy,
	[  --disable-privacy       disable network privacy support],
	if test "$enableval" = no; then
		AC_DEFINE(NOPRIVACY)
	fi)		

AC_MSG_CHECKING(for modern syslog)
AC_CACHE_VAL(cyrus_cv_lib_syslog, AC_TRY_CPP([#include <syslog.h>
#ifndef LOG_LOCAL6
#include </nonexistent>
#endif],cyrus_cv_lib_syslog=yes,cyrus_cv_lib_syslog=no))
if test $cyrus_cv_lib_syslog = no; then
	EXTRA_SUBDIRS="${EXTRA_SUBDIRS} syslog"
	DEPLIBS="${DEPLIBS} ../syslog/libsyslog.a"
	CPPFLAGS="$CPPFLAGS -I\$(srcdir)/../syslog"
fi
AC_MSG_RESULT($cyrus_cv_lib_syslog)

dnl
dnl Random other libraries
dnl
AC_CHECK_LIB(ndbm, main)
AC_CHECK_LIB(dbm, main)
AC_CHECK_LIB(socket, main, LIBS="${LIBS} -lsocket -lnsl",,-lnsl)
AC_OUTPUT(Makefile syslog/Makefile et/Makefile lib/Makefile imap/Makefile cyradm/Makefile imtest/Makefile glue/feedcyrus)
