# Makefile for cyrus imap server and associated programs
# 
# @configure_input@
# 
#	(C) Copyright 1994 by Carnegie Mellon University
# 
#                      All Rights Reserved
# 
# Permission to use, copy, modify, distribute, and sell this software
# and its documentation for any purpose is hereby granted without
# fee, provided that the above copyright notice appear in all copies
# and that both that copyright notice and this permission notice
# appear in supporting documentation, and that the name of Carnegie
# Mellon University not be used in advertising or publicity
# pertaining to distribution of the software without specific,
# written prior permission.  Carnegie Mellon University makes no
# representations about the suitability of this software for any
# purpose.  It is provided "as is" without express or implied
# warranty.
#
# CARNEGIE MELLON UNIVERSITY DISCLAIMS ALL WARRANTIES WITH REGARD TO
# THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
# AND FITNESS, IN NO EVENT SHALL CARNEGIE MELLON UNIVERSITY BE LIABLE
# FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN
# AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING
# OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
# SOFTWARE.
# 
DEFINES=-DSETPROCTITLE

# Authentication (login) routines.
LOGIN=login_@WITH_LOGIN@.o

# \Seen state database.  Only one choice for now:
SEEN=seen_local.o

# New mail notification mechanism
NOTIFY=notify_@WITH_NOTIFY@.o

srcdir = @srcdir@
VPATH = @srcdir@

CC = @CC@
INSTALL = @INSTALL@
RANLIB = @RANLIB@

CYRUS_USER=@cyrus_user@
NEWS_GROUP=@news_group@

DEFS = @DEFS@
CPPFLAGS = -I. -I$(srcdir) -I$(srcdir)/../lib -I$(srcdir)/../et @CPPFLAGS@ 
LIBS = @LIBS@ 
DEPLIBS = ../et/libcom_err.a ../lib/libcyrus.a @DEPLIBS@

CFLAGS = @CFLAGS@
LDFLAGS = @LDFLAGS@

SHELL = /bin/sh

COMPILE_ET=../et/compile_et

prefix = @prefix@
exec_prefix = @exec_prefix@
cyrus_prefix = @cyrus_prefix@

LOBJS= append.o mailbox.o mboxlist.o mboxname.o message.o parseaddr.o \
	config.o imap_err.o proc.o toimsp.o setproctitle.o \
	$(SEEN) $(NOTIFY) $(LOGIN)

IMAPDOBJS= imapd.o index.o

PROGS = collectnews syncnews imapd pop3d \
	arbitron reconstruct quota updateimsp
SUIDPROGS = deliver
SUGIDPROGS = rmnews


all: $(PROGS) $(SUIDPROGS) $(SUGIDPROGS)

install:
	for file in $(PROGS); \
	do \
		$(INSTALL) -s -o $(CYRUS_USER) -m 755 $$file $(DESTDIR)$(cyrus_prefix)/bin || exit 1; \
	done
	$(INSTALL) -s -o $(CYRUS_USER) -m 4750 $(SUIDPROGS) $(DESTDIR)$(cyrus_prefix)/bin
	$(INSTALL) -s -o $(CYRUS_USER) -g $(NEWS_GROUP) -m 6750 $(SUGIDPROGS) $(DESTDIR)$(cyrus_prefix)/bin
	$(INSTALL) -o $(CYRUS_USER) -m 755 feedcyrus $(DESTDIR)$(cyrus_prefix)/bin

.c.o:
	$(CC) -c $(CPPFLAGS) $(DEFS) $(CFLAGS) $<

collectnews: collectnews.o libimap.a $(DEPLIBS)
	$(CC) $(LDFLAGS) -o collectnews collectnews.o libimap.a \
		$(DEPLIBS) $(LIBS)

rmnews: rmnews.o libimap.a $(DEPLIBS)
	$(CC) $(LDFLAGS) -o rmnews rmnews.o libimap.a \
		$(DEPLIBS) $(LIBS)

syncnews: syncnews.o libimap.a $(DEPLIBS)
	$(CC) $(LDFLAGS) -o syncnews syncnews.o libimap.a \
		$(DEPLIBS) $(LIBS)

deliver: deliver.o libimap.a $(DEPLIBS)
	$(CC) $(LDFLAGS) -o deliver deliver.o libimap.a \
		$(DEPLIBS) $(LIBS)

imapd: $(IMAPDOBJS) libimap.a $(DEPLIBS)
	$(CC) $(LDFLAGS) -o imapd $(IMAPDOBJS) libimap.a \
		$(DEPLIBS) $(LIBS)

pop3d: pop3d.o libimap.a $(DEPLIBS)
	$(CC) $(LDFLAGS) -o pop3d pop3d.o libimap.a \
		$(DEPLIBS) $(LIBS)

arbitron: arbitron.o libimap.a $(DEPLIBS)
	$(CC) $(LDFLAGS) -o arbitron arbitron.o libimap.a \
		$(DEPLIBS) $(LIBS)

reconstruct: reconstruct.o libimap.a $(DEPLIBS)
	$(CC) $(LDFLAGS) -o reconstruct reconstruct.o libimap.a \
		$(DEPLIBS) $(LIBS)

quota: quota.o libimap.a $(DEPLIBS)
	$(CC) $(LDFLAGS) -o quota quota.o libimap.a \
		$(DEPLIBS) $(LIBS)

updateimsp: updateimsp.o libimap.a $(DEPLIBS)
	$(CC) $(LDFLAGS) -o updateimsp updateimsp.o libimap.a \
		$(DEPLIBS) $(LIBS)

libimap.a: $(LOBJS)
	rm -f libimap.a
	$(AR) cr libimap.a $(LOBJS)
	$(RANLIB) libimap.a

imap_err.h imap_err.c: imap_err.et
	$(COMPILE_ET) $(srcdir)/imap_err.et

clean:
	rm -f *.o *.a Makefile.bak imap_err.c imap_err.h $(PROGS)

distclean: clean
	rm -f Makefile

depend: imap_err.h
	makedepend $(CPPFLAGS) $(DEFS) $(CFLAGS) *.c $(srcdir)/*.c

# DO NOT DELETE THIS LINE -- make depend depends on it.


