Patch to add support for Dynamic Relay Authorization Control

For more information about DRAC, see:
	http://mail.cc.umanitoba.ca/drac/index.html


Installation
------------

1.  Apply this patch in the toplevel directory using the following command:

	# patch -b -p0 < contrib/drac_auth.patch

2.  Cleanup any previous builds:

	# make distclean

3a. If you DO NOT have 'smake' and 'autoconf' installed on your system, goto
    step 3b.

    Perform the following to reconfigure your build:

	# rm aclocal.m4 configure
	# sh SMakefile
	# ./configure ... --with-drac=<location of libdrac>

    NOTE: you can find your original configure command in config.status

    Proceed to step 4.

3b. Edit imap/Makefile and modify the following three variables:

	DEFS = ... -DDRAC_AUTH
	LIBS = ... -ldrac
	LDFLAGS = ... -L<location of libdrac>

4.  Build and install the software:

	# make
	# make install

5.  If dracd is not running on the same system as Cyrus (localhost),
    use the 'drachost' option in cyrus.conf(5) to specify the hostname of
    the dracd server.

6.  Installation is complete!


Operation
---------

pop3d: Whenever a client opens a user's INBOX, drac_auth() is called.

imapd: Once a client is logged in, drac_send() will be called every 5 minutes.
       To change this interval, see drac_ping() in imap/imapd.c





*** acconfig.h.orig	Wed Feb  7 16:46:56 2001
--- acconfig.h	Tue Feb 20 08:49:19 2001
***************
*** 78,83 ****
--- 78,86 ----
  /* the TCP control package */
  #undef HAVE_LIBWRAP
  
+ /* the Dynamic Relay Authorization Control package */
+ #undef DRAC_AUTH
+ 
  /* do we have OpenSSL? */
  #undef HAVE_SSL
  
*** configure.in.orig	Mon Feb 19 13:36:34 2001
--- configure.in	Tue Feb 20 08:49:19 2001
***************
*** 714,719 ****
--- 714,734 ----
  SNMP_SUBDIRS=""
  AC_SUBST(SNMP_SUBDIRS)
  
+ 
+ 
+ dnl
+ dnl Test for DRAC
+ dnl
+ AC_ARG_WITH(drac, [  --with-drac=DIR         use DRAC library in <DIR> [no] ],
+ 	if test -d "$withval"; then
+ 		LDFLAGS="$LDFLAGS -L${withval}"
+ 		AC_CHECK_LIB(drac, dracauth,
+ 			AC_DEFINE(DRAC_AUTH)
+ 			LIBS="${LIBS} -ldrac")
+ 	fi)
+ 
+ 
+ 
  CMU_SOCKETS
  CMU_LIBWRAP
  CMU_UCDSNMP
*** imap/imapd.c.orig	Fri Feb 16 13:55:10 2001
--- imap/imapd.c	Tue Feb 20 08:49:19 2001
***************
*** 486,491 ****
--- 486,499 ----
         TLS negotiation immediately */
      if (imaps == 1) cmd_starttls(NULL, 1);
  
+ #ifdef DRAC_AUTH
+     {
+ 	char *err;
+ 	if (dracconn(config_getstring("drachost", "localhost"), &err) != 0)
+ 	    syslog(LOG_NOTICE, "dracconn: %s", err);
+     }
+ #endif /* DRAC_AUTH */
+ 
      snmp_increment(TOTAL_CONNECTIONS, 1);
      snmp_increment(ACTIVE_CONNECTIONS, 1);
  
***************
*** 561,566 ****
--- 569,579 ----
      prot_flush(imapd_out);
      /* one less active connection */
      snmp_increment(ACTIVE_CONNECTIONS, -1);
+ 
+ #ifdef DRAC_AUTH
+     (void) dracdisc((char **)NULL);
+ #endif /* DRAC_AUTH */
+ 
      exit(code);
  }
  
***************
*** 581,586 ****
--- 594,616 ----
  
  }
  
+ #ifdef DRAC_AUTH
+ /*
+  * Ping dracd every 5 min to let it know that we are still connected
+  */
+ struct prot_waitevent *drac_ping(struct protstream *s,
+ 				 struct prot_waitevent *ev, void *rock)
+ {
+     char *err;
+ 
+     if (dracsend(imapd_remoteaddr.sin_addr.s_addr, &err) != 0)
+ 	syslog(LOG_NOTICE, "dracsend: %s", err);
+ 
+     ev->mark = time(NULL) + (5 * 60);
+     return ev;
+ }
+ #endif /* DRAC_AUTH */
+ 
  /*
   * Top-level command loop parsing
   */
***************
*** 1429,1434 ****
--- 1459,1468 ----
  
      if (!reply) reply = "User logged in";
  
+ #ifdef DRAC_AUTH
+     prot_addwaitevent(imapd_in, 0 /* ping now */, drac_ping, NULL);
+ #endif /* DRAC_AUTH */
+ 
      /* Create telemetry log */
      sprintf(buf, "%s%s%s/%lu", config_dir, FNAME_LOGDIR, imapd_userid,
  	    (unsigned long) getpid());
***************
*** 1585,1590 ****
--- 1619,1628 ----
  
      prot_setsasl(imapd_in,  imapd_saslconn);
      prot_setsasl(imapd_out, imapd_saslconn);
+ 
+ #ifdef DRAC_AUTH
+     prot_addwaitevent(imapd_in, 0 /* ping now */, drac_ping, NULL);
+ #endif /* DRAC_AUTH */
  
      /* Create telemetry log */
      sprintf(buf, "%s%s%s/%lu", config_dir, FNAME_LOGDIR, imapd_userid,
*** imap/pop3d.c.orig	Fri Feb 16 13:55:10 2001
--- imap/pop3d.c	Tue Feb 20 08:49:19 2001
***************
*** 1111,1116 ****
--- 1111,1125 ----
      popd_mailbox = &mboxstruct;
      proc_register("pop3d", popd_clienthost, popd_userid, popd_mailbox->name);
  
+ #ifdef DRAC_AUTH
+     {
+ 	char *err;
+ 	if (dracauth(config_getstring("drachost", "localhost"),
+ 		     popd_remoteaddr.sin_addr.s_addr, &err) != 0)
+ 	    syslog(LOG_NOTICE, "dracauth: %s", err);
+     }
+ #endif /* DRAC_AUTH */
+ 
      /* Create telemetry log */
      sprintf(buf, "%s%s%s/%lu", config_dir, FNAME_LOGDIR, popd_userid,
  	    (long unsigned) getpid());
*** man/imapd.conf.5.orig	Mon Feb 19 14:38:59 2001
--- man/imapd.conf.5	Tue Feb 20 08:49:19 2001
***************
*** 217,222 ****
--- 217,224 ----
  file overrides the SASL configuration file.
  .IP "\fBlmtpsocket:\fR /var/imap/socket/lmtp" 5
  Unix domain socket that lmtpd listens on.
+ .IP "\fBdrachost:\fR localhost" 5
+ Hostname of the dracd server.
  .SH SEE ALSO
  .PP
  \fBimapd(8)\fR, \fBpop3d(8)\fR, \fBlmtpd(8)\fR, \fBtimsieved(8)\fR,
